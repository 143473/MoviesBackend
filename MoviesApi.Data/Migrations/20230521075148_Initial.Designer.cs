// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesApi.Data;

#nullable disable

namespace MoviesApi.Data.Migrations
{
    [DbContext(typeof(MoviesContext))]
    [Migration("20230521075148_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MoviesApi.Data.Models.FavoriteMovie", b =>
                {
                    b.Property<int>("FavoriteMovieId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Overview")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReleaseDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FavoriteMovieId");

                    b.ToTable("FavoriteMovies");
                });

            modelBuilder.Entity("MoviesApi.Data.Models.Favorites", b =>
                {
                    b.Property<int>("FavoriteMovieId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FavoriteMovieId", "UserId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("MoviesApi.Data.Models.RatedMovie", b =>
                {
                    b.Property<string>("RatedMovieId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("RatedMovieId", "UserId");

                    b.ToTable("RatedMovie");
                });

            modelBuilder.Entity("MoviesApi.Data.Models.Favorites", b =>
                {
                    b.HasOne("MoviesApi.Data.Models.FavoriteMovie", "FavoriteMovie")
                        .WithMany()
                        .HasForeignKey("FavoriteMovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FavoriteMovie");
                });
#pragma warning restore 612, 618
        }
    }
}
